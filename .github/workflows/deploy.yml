name: CI/CD Pipeline (OIDC)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    permissions:
      id-token: write   # üîë –Ω—É–∂–Ω–æ –¥–ª—è GitHub OIDC
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # üîë –ù–æ–≤—ã–π —à–∞–≥ ‚Äî –ª–æ–≥–∏–Ω–∏–º—Å—è –≤ Vault —á–µ—Ä–µ–∑ OIDC
      - name: Authenticate with Vault via OIDC
        id: vault
        uses: hashicorp/vault-action@v2
        with:
          method: jwt
          url: "http://127.0.0.1:8200"
          role: "github-ci"
          jwtGithubAudience: "https://token.actions.githubusercontent.com"
          secrets: |
            secret/data/dockerhub username | DOCKER_USERNAME ;
            secret/data/dockerhub password | DOCKER_PASSWORD
      


      # üîê –¢–µ–ø–µ—Ä—å –∫—Ä–µ–¥—ã –ª–µ–∂–∞—Ç –≤ env (DOCKER_USERNAME, DOCKER_PASSWORD)

      - name: Log in to DockerHub
        env:
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ env.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build Docker image
        env:
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
        run: docker build -t $DOCKER_USERNAME/fastapi-app:latest .

      - name: Push Docker image
        env:
          DOCKER_USERNAME: ${{ env.DOCKER_USERNAME }}
        run: docker push $DOCKER_USERNAME/fastapi-app:latest

      - name: Pull latest image from DockerHub
        run: |
          cd ~/deployment
          docker pull ${{ env.DOCKER_USERNAME }}/fastapi-app:latest

      - name: Stop running container (only if pull succeeded)
        if: success()
        run: |
          cd ~/deployment
          docker compose down || true

      - name: Start new container (only if pull succeeded)
        if: success()
        run: |
          cd ~/deployment
          docker compose up -d
